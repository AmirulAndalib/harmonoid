name: Harmonoid
on:
  push:
    branches:
      - master
      - vnext

jobs:
  build_windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Enable Long Paths
        run: |
          git config --system core.longpaths true
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Build
        run: |
          flutter pub get
          flutter build windows --verbose --dart-define=API_KEY=${{ secrets.API_KEY }} --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }}
      - name: Create PFX
        id: create_pfx
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "certificate.pfx"
          encodedString: ${{ secrets.CERTIFICATE }}
      - name: Sign Executable
        run: |
          "%programfiles(x86)%\Windows Kits\10\App Certification Kit\signtool.exe" sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f "${{ steps.create_pfx.outputs.filePath }}" /p ${{ secrets.PASSWORD }} "build/windows/x64/runner/Release/harmonoid.exe"
        shell: cmd
      - name: Bundle Executable
        run: |
          cp -r build/windows/x64/runner/Release harmonoid-windows-exe
          tar.exe -a -c -f harmonoid-windows-exe.zip harmonoid-windows-exe
      - name: Bundle Installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "Harmonoid_InnoSetup.iss"
        shell: cmd
      - name: Sign Installer
        run: |
          "%programfiles(x86)%\Windows Kits\10\App Certification Kit\signtool.exe" sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f "${{ steps.create_pfx.outputs.filePath }}" /p ${{ secrets.PASSWORD }} "Output/harmonoid-windows-setup.exe"
        shell: cmd
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: ${{ secrets.REPOSITORY_2 }}
        with:
          repository: ${{ secrets.REPOSITORY_2 }}
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            Output/harmonoid-windows-setup.exe
            harmonoid-windows-exe.zip
          token: ${{ secrets.ACCESS_TOKEN_2 }}
      - name: Upload Release (Snapshot)
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: harmonoid/snapshots
        with:
          repository: harmonoid/snapshots
          draft: false
          prerelease: true
          body: ${{ github.sha }}
          tag_name: snapshot
          files: |
            Output/harmonoid-windows-setup.exe
            harmonoid-windows-exe.zip
          token: ${{ secrets.ACCESS_TOKEN_2 }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows/x64/runner/Release

  build_linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev rpm tree
      - name: Build
        run: |
          rm -r "assets/icons"
          mkdir "assets/icons"
          flutter pub get
          flutter build linux --verbose --dart-define=API_KEY=${{ secrets.API_KEY }} --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }}
      - name: Bundle RPM
        run: |
          cp -fr build/linux/x64/release/bundle linux/debian/usr/share/harmonoid
          mkdir linux/debian/usr/bin
          ln -sr linux/debian/usr/share/harmonoid/harmonoid linux/debian/usr/bin/harmonoid
          sed -i "s:cp -rf :cp -rf $(pwd)/:" linux/rpm/harmonoid.spec
          cd linux/debian
          sed -i "s:FILES_HERE:$(find usr \( -type l -o -type f \) -follow -print | awk '{printf "/%s\\n", $0}'):" ../rpm/harmonoid.spec
          cd ../../
          rpmbuild -bb linux/rpm/harmonoid.spec -D "_topdir $(pwd)/rpmbuild"
          cp rpmbuild/RPMS/x86_64/*.rpm harmonoid-linux-x86_64.rpm
      - name: Bundle DEB
        run: |
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb harmonoid-linux-x86_64.deb
      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/harmonoid AppDir/harmonoid
          tar czf harmonoid-linux-x86_64.tar.gz -C AppDir/ .
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: ${{ secrets.REPOSITORY_2 }}
        with:
          repository: ${{ secrets.REPOSITORY_2 }}
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: harmonoid-linux-*
          token: ${{ secrets.ACCESS_TOKEN_2 }}
      - name: Upload Release (Snapshot)
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: harmonoid/snapshots
        with:
          repository: harmonoid/snapshots
          draft: false
          prerelease: true
          body: ${{ github.sha }}
          tag_name: snapshot
          files: harmonoid-linux-*
          token: ${{ secrets.ACCESS_TOKEN_2 }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux/x64/release/bundle

  build_android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Create Key Store
        id: create_key_store
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "keystore.pfx"
          encodedString: ${{ secrets.KEY_STORE }}
      - name: Create Key Properties
        id: create_key_properties
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "key.properties"
          encodedString: ${{ secrets.KEY_PROPERTIES }}
      - name: Build
        run: |
          rm -r "assets/icons"
          mkdir "assets/icons"
          rm -r "assets/visuals"
          mkdir "assets/visuals"
          cp "${{ steps.create_key_store.outputs.filePath }}" android/app/keystore.jks
          cp "${{ steps.create_key_properties.outputs.filePath }}" android/key.properties
          flutter pub get
          flutter build apk --split-per-abi --verbose --dart-define=API_KEY=${{ secrets.API_KEY }} --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }}
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk harmonoid-android-arm64-v8a-release.apk
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk harmonoid-android-armeabi-v7a-release.apk
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk harmonoid-android-x86_64-release.apk
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: ${{ secrets.REPOSITORY_2 }}
        with:
          repository: ${{ secrets.REPOSITORY_2 }}
          draft: true
          prerelease: false
          tag_name: "vnext"
          files: |
            harmonoid-android-arm64-v8a-release.apk
            harmonoid-android-armeabi-v7a-release.apk
            harmonoid-android-x86_64-release.apk
          token: ${{ secrets.ACCESS_TOKEN_2 }}
