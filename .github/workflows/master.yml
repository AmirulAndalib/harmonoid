name: Harmonoid
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build_windows:
    name: Harmonoid Windows
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Set Git Commit Hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check Git Commit Hash
        run: echo ${{ steps.vars.outputs.sha_short }}
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows

      - name: Create PFX
        id: create_pfx
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "certificate.pfx"
          encodedString: ${{ secrets.CERTIFICATE }}

      - run: |
          "%programfiles(x86)%\Windows Kits\10\App Certification Kit\signtool.exe" sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f "${{ steps.create_pfx.outputs.filePath }}" /p ${{ secrets.PASSWORD }} "build/windows/runner/Release/harmonoid.exe"
        shell: cmd
      - run: cp -r build/windows/runner/Release harmonoid-windows-exe
      - run: tar.exe -a -c -f harmonoid-windows-exe.zip harmonoid-windows-exe

      - run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "Harmonoid_InnoSetup.iss"
        shell: cmd
      - run: |
          "%programfiles(x86)%\Windows Kits\10\App Certification Kit\signtool.exe" sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /f "${{ steps.create_pfx.outputs.filePath }}" /p ${{ secrets.PASSWORD }} "Output/harmonoid-windows-setup.exe"
        shell: cmd
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          body: ""
          tag_name: "vnext"
          files: |
            Output/harmonoid-windows-setup.exe
            harmonoid-windows-exe.zip
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release Nightly
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: harmonoid/harmonoid-nightly
        with:
          repository: harmonoid/harmonoid-nightly
          draft: false
          prerelease: true
          body: ${{ github.sha }}
          tag_name: ${{ steps.vars.outputs.sha_short }}
          files: |
            Output/harmonoid-windows-setup.exe
            harmonoid-windows-exe.zip
          token: ${{ secrets.ACCESS_TOKEN }}

  build_linux:
    name: Harmonoid Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Set Git Commit Hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check Git Commit Hash
        run: echo ${{ steps.vars.outputs.sha_short }}
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: sudo apt-get update
      - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev mpv libmpv-dev dpkg-dev rpm
      - run: flutter config --enable-linux-desktop
      - run: flutter pub upgrade
      - run: flutter pub get
      - run: flutter build linux --verbose

      - name: Build RPM Package
        run: |
          cp -fr build/linux/x64/release/bundle linux/debian/usr/bin
          sed -i "s:cp -rf :cp -rf $(pwd)/:" linux/rpm/harmonoid.spec
          cd linux/debian
          sed -i "s:FILES_HERE:$(find usr -type f -follow -print | awk '{printf "/%s\\n", $0}'):" ../rpm/harmonoid.spec
          cd ../../
          rpmbuild -bb linux/rpm/harmonoid.spec -D "_topdir $(pwd)/rpmbuild"
          cp rpmbuild/RPMS/x86_64/*.rpm harmonoid-linux-x86_64.rpm

      - name: Build DEB Package
        run: |
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb harmonoid-linux-x86_64.deb

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/harmonoid AppDir/harmonoid
          tar czf harmonoid-linux-x86_64.tar.gz -C AppDir/ .

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          body: ""
          tag_name: "vnext"
          files: harmonoid-linux-*
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release Nightly
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: harmonoid/harmonoid-nightly
        with:
          repository: harmonoid/harmonoid-nightly
          draft: false
          prerelease: true
          body: ${{ github.sha }}
          tag_name: ${{ steps.vars.outputs.sha_short }}
          files: harmonoid-linux-*
          token: ${{ secrets.ACCESS_TOKEN }}

  build_android:
    name: Harmonoid Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive
      - name: Set Git Commit Hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check Git Commit Hash
        run: echo ${{ steps.vars.outputs.sha_short }}
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Create Key Store
        id: create_key_store
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "keystore.pfx"
          encodedString: ${{ secrets.KEY_STORE }}

      - name: Create Key Properties
        id: create_key_properties
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "key.properties"
          encodedString: ${{ secrets.KEY_PROPERTIES }}

      - run: cp "${{ steps.create_key_store.outputs.filePath }}" android/app/keystore.jks
      - run: cp "${{ steps.create_key_properties.outputs.filePath }}" android/key.properties

      - run: flutter pub upgrade
      - run: flutter pub get
      - run: flutter build apk --verbose
      - run: cp build/app/outputs/flutter-apk/app-release.apk harmonoid-android.apk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          body: ""
          tag_name: "vnext"
          files: |
            harmonoid-android.apk
          token: ${{ secrets.GITHUB_TOKEN }}
